// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")
  email      String   @unique
  hash       String
  hashedRt   String?
  name       String?  @unique
  avatarPath String   @default("https://sbcf.fr/wp-content/uploads/2018/03/sbcf-default-avatar.png")
  orders     Order[]
  reviews    Review[]
  favorites  Product[]

  @@map("users")
}

model Product {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @default(now()) @map("updated_at")
  name        String      @unique
  slug        String      @unique
  description String
  price       Int
  images      String[]
  orderItems  OrderItem[]
  reviews     Review[]
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  Int?        @map("category_id")
  user        User?       @relation(fields: [userId], references: [id])
  userId      Int?        @map("user_id")

  @@map("products")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  name      String   @unique
  slug      String   @unique
  products  Product[]

  @@map("categories")
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  rating    Int
  text      String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @map("user_id")
  product   Product  @relation(fields: [productId], references: [id])
  productId Int      @map("product_id")

  @@map("reviews")
}

model Order {
  id        Int              @id @default(autoincrement())
  createdAt DateTime         @default(now())
  updatedAt DateTime         @default(now())
  status    EnumOrderStatus  @default(PENDING)     
  items     OrderItem[]
  total     Int
  user      User             @relation(fields: [userId], references: [id])
  userId    Int              @map("user_id")

  @@map("orders")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  quantity  Int   
  price     Int
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int?     @map("order_id")
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?     @map("product_id")

  @@map("order_item")
}

enum EnumOrderStatus {
  PENDING
  PAYED
  SHIPED
  DELIVERED
}